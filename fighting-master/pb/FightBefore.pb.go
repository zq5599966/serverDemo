// Code generated by protoc-gen-go.
// source: FightBefore.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type InitRoomMsg struct {
	Seed      int32 `protobuf:"varint,1,opt,name=seed" json:"seed,omitempty"`
	LocalID   int32 `protobuf:"varint,2,opt,name=localID" json:"localID,omitempty"`
	MaxPlayer int32 `protobuf:"varint,3,opt,name=maxPlayer" json:"maxPlayer,omitempty"`
}

func (m *InitRoomMsg) Reset()                    { *m = InitRoomMsg{} }
func (m *InitRoomMsg) String() string            { return proto.CompactTextString(m) }
func (*InitRoomMsg) ProtoMessage()               {}
func (*InitRoomMsg) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type PlayerJionMsg struct {
	PlayerLocalID int32 `protobuf:"varint,1,opt,name=playerLocalID" json:"playerLocalID,omitempty"`
}

func (m *PlayerJionMsg) Reset()                    { *m = PlayerJionMsg{} }
func (m *PlayerJionMsg) String() string            { return proto.CompactTextString(m) }
func (*PlayerJionMsg) ProtoMessage()               {}
func (*PlayerJionMsg) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func init() {
	proto.RegisterType((*InitRoomMsg)(nil), "pb.InitRoomMsg")
	proto.RegisterType((*PlayerJionMsg)(nil), "pb.PlayerJionMsg")
}

func init() { proto.RegisterFile("FightBefore.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x74, 0xcb, 0x4c, 0xcf,
	0x28, 0x71, 0x4a, 0x4d, 0xcb, 0x2f, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a,
	0x48, 0x52, 0x8a, 0xe4, 0xe2, 0xf6, 0xcc, 0xcb, 0x2c, 0x09, 0xca, 0xcf, 0xcf, 0xf5, 0x2d, 0x4e,
	0x17, 0x12, 0xe2, 0x62, 0x29, 0x4e, 0x4d, 0x4d, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x02,
	0xb3, 0x85, 0x24, 0xb8, 0xd8, 0x73, 0xf2, 0x93, 0x13, 0x73, 0x3c, 0x5d, 0x24, 0x98, 0xc0, 0xc2,
	0x30, 0xae, 0x90, 0x0c, 0x17, 0x67, 0x6e, 0x62, 0x45, 0x40, 0x4e, 0x62, 0x65, 0x6a, 0x91, 0x04,
	0x33, 0x58, 0x0e, 0x21, 0xa0, 0x64, 0xca, 0xc5, 0x0b, 0x61, 0x79, 0x65, 0xe6, 0xe7, 0x81, 0x0c,
	0x57, 0xe1, 0xe2, 0x2d, 0x00, 0x0b, 0xf8, 0x40, 0x8d, 0x83, 0xd8, 0x82, 0x2a, 0xe8, 0xc4, 0xb1,
	0x8a, 0x89, 0x35, 0x00, 0xe4, 0xbe, 0x24, 0x36, 0xb0, 0x33, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x13, 0x59, 0xd5, 0xe0, 0xbb, 0x00, 0x00, 0x00,
}
